{"version":3,"sources":["App.tsx","constants.ts","index.tsx"],"names":["App","state","lastKey","handleKeyPush","event","setState","key","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAe,CACbC,QAAS,IAFb,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAO,UC7BmB,0BD6BnB,aACyBA,EADzB,KC9BkB,kCDOpC,GAAyBU,IAAMC,e,MEF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.b2c363e2.chunk.js","sourcesContent":["import React from 'react';\nimport { FIRST_RENDER_MESSAGE, KEY_IS_PUSHED_MESSAGE } from './constants';\n\ninterface State {\n  lastKey: string;\n}\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    lastKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPush);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPush);\n  }\n\n  handleKeyPush = (event: KeyboardEvent) => {\n    this.setState({ lastKey: event.key });\n  };\n\n  render() {\n    const { lastKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {lastKey\n            ? `${KEY_IS_PUSHED_MESSAGE} [${lastKey}]`\n            : FIRST_RENDER_MESSAGE}\n        </p>\n      </div>\n    );\n  }\n}\n","export const FIRST_RENDER_MESSAGE = 'Nothing was pressed yet';\nexport const KEY_IS_PUSHED_MESSAGE = 'The last pressed key is';\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}